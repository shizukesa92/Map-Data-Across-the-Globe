// Map data
d3.json("https://d3js.org/world-50m.v1.json", (error, data) => {
	if (error) throw error;

	const projection = d3.geoMercator() //https://github.com/d3/d3-geo
		.translate([780, 360])
		.scale(300),
		path = d3.geoPath(projection);

	const w = document.getElementById("main").clientWidth,
		h = document.getElementById("main").clientHeight;


	// Set SVG dimensions and append map 
	let map = d3.select("svg")
		.attr("width", w)
		.attr("height", h)


	map.selectAll('path')
		.data(topojson.feature(data, data.objects.countries).features) //https://github.com/topojson/topojson to convert topojson to GeoJSON
		.enter()
		.append('path')
		.attr('fill', '#95E1D3')
		.attr('stroke', '#266D98')
		.attr('d', path)


	// Tooltip
	let tooltips = d3.select("#chart")
		.append("div")
		.attr("class", "tooltip")
		.style("opacity", 0)
	let create = (d) => {
		let tooltip = `<span> ${d.Name} : ${d.Nationality} </span>`;
		tooltip += `<br/>Year: ${d.Year}, Time: ${parseInt(d.Seconds / 60)}:${d.Seconds % 60}<br/>`;
		d.doping !== "" ?
			tooltip += "<br/>" + d.Doping :
			tooltip += "<br/>No Doping Allegation";

		return tooltip;
	}
});

// Meteorite Data
d3.json("https://data.nasa.gov/resource/y77d-th95.geojson", (error, data) => {
	if (error) throw error;

});
