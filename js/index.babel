const zoom = d3.zoom() //https://bl.ocks.org/iamkevinv/0a24e9126cd2fa6b283c6f2d774b69a2
	.scaleExtent([.5, 18])
	.on("zoom", zoomed);

// Map data
d3.json("https://d3js.org/world-50m.v1.json", (error, data) => {
	if (error) throw error;

	const projection = d3.geoMercator() //https://github.com/d3/d3-geo
		.translate([780, 360])
		.scale(300),
		path = d3.geoPath(projection);

	const w = document.getElementById("main").clientWidth,
		h = document.getElementById("main").clientHeight;


	// Set SVG dimensions and append map 
	let map = d3.select("svg")
		.attr("width", w)
		.attr("height", h)


	map.selectAll('path')
		.data(topojson.feature(data, data.objects.countries).features) //https://github.com/topojson/topojson to convert topojson to GeoJSON
		.enter()
		.append('path')
		.attr('fill', '#95E1D3')
		.attr('stroke', '#266D98')
		.attr('d', path)


	// Tooltip
	let tooltips = d3.select("#chart")
		.append("div")
		.attr("class", "tooltip")
		.style("opacity", 0)
	let create = (d) => {
		let tooltip = `<span> ${d.Name} : ${d.Nationality} </span>`;
		tooltip += `<br/>Year: ${d.Year}, Time: ${parseInt(d.Seconds / 60)}:${d.Seconds % 60}<br/>`;
		d.doping !== "" ?
			tooltip += "<br/>" + d.Doping :
			tooltip += "<br/>No Doping Allegation";

		return tooltip;
	}
});

// Meteorite Data
d3.json("https://data.nasa.gov/resource/y77d-th95.geojson", (error, data) => {
	if (error) throw error;
	json.features.sort(function(a, b) {
		return new Date(a.properties.year) - new Date(b.properties.year);
	})
	json.features.map(function(e) {
		hue += .35;
		colors[e.properties.year] = hue;
		e.color = 'hsl(' + hue + ',100%, 50%)';
	})

	json.features.sort(function(a, b) {
		return b.properties.mass - a.properties.mass
	})

	meteorites = svg.append('g')
		.selectAll('path')
		.data(json.features)
		.enter()
		.append('circle')
		.attr('cx', function(d) {
			return projection([d.properties.reclong, d.properties.reclat])[0]
		})
		.attr('cy', function(d) {
			return projection([d.properties.reclong, d.properties.reclat])[1]
		})
		.attr('r', function(d) {
			var range = 718750 / 2 / 2;

			if (d.properties.mass <= range) return 2;
			else if (d.properties.mass <= range * 2) return 10;
			else if (d.properties.mass <= range * 3) return 20;
			else if (d.properties.mass <= range * 20) return 30;
			else if (d.properties.mass <= range * 100) return 40;
			return 50;
		})
		.attr('fill-opacity', function(d) {
			var range = 718750 / 2 / 2;
			if (d.properties.mass <= range) return 1;
			return .5;
		})
		.attr('stroke-width', 1)
		.attr('stroke', '#EAFFD0')
		.attr('fill', function(d) {
			return d.color
		})
		.on('mouseover', function(d) {
			d3.select(this).attr('d', path).style('fill', 'black');
			// Show tooltip
			div.transition()
				.duration(200)
				.style('opacity', .9);
			div.html('<span class="def">fall:</span> ' + d.properties.fall + '<br>' +
					'<span class="def">mass:</span> ' + d.properties.mass + '<br>' +
					'<span class="def">name:</span> ' + d.properties.name + '<br>' +
					'<span class="def">nametype:</span> ' + d.properties.nametype + '<br>' +
					'<span class="def">recclass:</span> ' + d.properties.recclass + '<br>' +
					'<span class="def">reclat:</span> ' + d.properties.reclat + '<br>' +
					'<span class="def">year:</span> ' + d.properties.year + '<br>')
				.style('left', (d3.event.pageX + 30) + 'px')
				.style('top', (d3.event.pageY / 1.5) + 'px')
		})
		.on('mouseout', function(d) {
			// Reset color of dot
			d3.select(this).attr('d', path).style('fill', function(d) {
				return d.properties.hsl
			});

			// Fade out tooltip
			div.transition()
				.duration(500)
				.style('opacity', 0);
		});
});

function zoomed() {
	map.attr("transform", d3.event.transform);
	meteorites.attr('transform', 'translate(' + d3.event.translate + ')scale(' + d3.event.scale + ')');
}
